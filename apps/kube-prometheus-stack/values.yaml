kube-prometheus-stack:
  global:
    rbac:
      pspEnabled: false

  defaultRules:
    create: false

  kubeEtcd:
    service:
      targetPort: 2381

  nodeExporter:
    serviceMonitor:
      relabelings:
      - sourceLabels:
        - __meta_kubernetes_pod_node_name
        targetLabel: nodeName
        action: replace

  grafana:
    rbac:
      pspEnabled: false
    adminPassword: password
    grafana.ini:
      log:
        mode: console
      paths:
        data: /var/lib/grafana/data
        logs: /var/log/grafana
        plugins: /var/lib/grafana/plugins
        provisioning: /etc/grafana/provisioning
      server:
        root_url: http://localhost/grafana
    defaultDashboardsEnabled: false
    service:
      port: 9090

  prometheus:
    prometheusSpec:
      alertingEndpoints:
      - apiVersion: v2
        name: kube-prometheus-stack-alertmanager
        namespace: default
        pathPrefix: /
        port: web
      - apiVersion: v2
        name: mock-server
        namespace: default
        pathPrefix: /
        port: https
        scheme: https
        tlsConfig:
          insecureSkipVerify: true

      externalUrl: prometheus
      ruleSelectorNilUsesHelmValues: false
      serviceMonitorSelectorNilUsesHelmValues: false
      logLevel: debug
      externalLabels:
        cluster: test
        env: qa
      storageSpec:
        volumeClaimTemplate:
          spec:
            storageClassName: standard
            accessModes:
            - ReadWriteOnce
            resources:
              requests:
                storage: 30Gi
    service:
      port: 9090

  alertmanager:
    alertmanagerSpec:
      externalUrl: http://localhost/alertmanager
      configSecret: alertmanager-config
      logLevel: debug
    service:
      port: 9090

  prometheusOperator:
    admissionWebhooks:
      enabled: false
    tls:
      enabled: false

  kube-state-metrics:
    podSecurityPolicy:
      enabled: false

  prometheus-node-exporter:
    rbac:
      pspEnabled: false

alertmanagerConfig:
  url: https://mock-server.default.svc.cluster.local/
